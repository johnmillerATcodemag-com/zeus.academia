{"version":3,"file":"DashboardView-DsSPeBSe.js","sources":["../../src/stores/data.ts","../../src/views/DashboardView.vue"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\nimport type { \r\n  DataState, \r\n  PaginationState, \r\n  Alert,\r\n  BulkOperationResult\r\n} from '@/types'\r\nimport { AdminApiService } from '@/services/AdminApiService'\r\nimport { useAuthStore } from './auth'\r\n\r\nexport const useDataStore = defineStore('data', () => {\r\n  // Users state\r\n  const users = ref<{\r\n    data: any[]\r\n    totalCount: number\r\n    filters: Record<string, any>\r\n    pagination: PaginationState\r\n    loading: boolean\r\n    error: string | null\r\n  }>({\r\n    data: [],\r\n    totalCount: 0,\r\n    filters: {},\r\n    pagination: {\r\n      page: 1,\r\n      pageSize: 50,\r\n      totalPages: 0,\r\n      totalItems: 0\r\n    },\r\n    loading: false,\r\n    error: null\r\n  })\r\n\r\n  // Courses state\r\n  const courses = ref<{\r\n    data: any[]\r\n    totalCount: number\r\n    byDepartment: Record<string, any[]>\r\n    loading: boolean\r\n    error: string | null\r\n  }>({\r\n    data: [],\r\n    totalCount: 0,\r\n    byDepartment: {},\r\n    loading: false,\r\n    error: null\r\n  })\r\n\r\n  // Enrollments state\r\n  const enrollments = ref<{\r\n    current: any[]\r\n    historical: any[]\r\n    statistics: Record<string, any>\r\n    loading: boolean\r\n    error: string | null\r\n  }>({\r\n    current: [],\r\n    historical: [],\r\n    statistics: {},\r\n    loading: false,\r\n    error: null\r\n  })\r\n\r\n  // System metrics state\r\n  const systemMetrics = ref<{\r\n    performance: Record<string, any>\r\n    health: Record<string, any>\r\n    alerts: Alert[]\r\n    lastUpdated: Date | null\r\n    loading: boolean\r\n    error: string | null\r\n  }>({\r\n    performance: {},\r\n    health: {},\r\n    alerts: [],\r\n    lastUpdated: null,\r\n    loading: false,\r\n    error: null\r\n  })\r\n\r\n  // Departments state\r\n  const departments = ref<{\r\n    data: any[]\r\n    loading: boolean\r\n    error: string | null\r\n  }>({\r\n    data: [],\r\n    loading: false,\r\n    error: null\r\n  })\r\n\r\n  // Roles state\r\n  const roles = ref<{\r\n    data: any[]\r\n    loading: boolean\r\n    error: string | null\r\n  }>({\r\n    data: [],\r\n    loading: false,\r\n    error: null\r\n  })\r\n\r\n  // Selected items for bulk operations\r\n  const selectedUsers = ref<string[]>([])\r\n  const selectedEnrollments = ref<string[]>([])\r\n\r\n  // Getters\r\n  const filteredUsers = computed(() => {\r\n    if (!users.value.filters || Object.keys(users.value.filters).length === 0) {\r\n      return users.value.data\r\n    }\r\n    \r\n    return users.value.data.filter((user: any) => {\r\n      return Object.entries(users.value.filters).every(([key, value]) => {\r\n        if (!value) return true\r\n        \r\n        const userValue = user[key]\r\n        if (typeof value === 'string') {\r\n          return userValue?.toString().toLowerCase().includes(value.toLowerCase())\r\n        }\r\n        return userValue === value\r\n      })\r\n    })\r\n  })\r\n\r\n  const coursesByDepartment = computed(() => {\r\n    const grouped: Record<string, any[]> = {}\r\n    courses.value.data.forEach((course: any) => {\r\n      const dept = course.department || 'Other'\r\n      if (!grouped[dept]) grouped[dept] = []\r\n      grouped[dept].push(course)\r\n    })\r\n    return grouped\r\n  })\r\n\r\n  const enrollmentStatistics = computed(() => {\r\n    const stats = {\r\n      totalCurrent: enrollments.value.current.length,\r\n      totalHistorical: enrollments.value.historical.length,\r\n      byStatus: {} as Record<string, number>,\r\n      bySemester: {} as Record<string, number>\r\n    }\r\n    \r\n    enrollments.value.current.forEach((enrollment: any) => {\r\n      stats.byStatus[enrollment.status] = (stats.byStatus[enrollment.status] || 0) + 1\r\n      stats.bySemester[enrollment.semester] = (stats.bySemester[enrollment.semester] || 0) + 1\r\n    })\r\n    \r\n    return stats\r\n  })\r\n\r\n  const systemHealthStatus = computed(() => {\r\n    const health = systemMetrics.value.health\r\n    if (!health || Object.keys(health).length === 0) return 'unknown'\r\n    \r\n    const criticalIssues = systemMetrics.value.alerts.filter(alert => alert.severity === 'critical').length\r\n    const highIssues = systemMetrics.value.alerts.filter(alert => alert.severity === 'high').length\r\n    \r\n    if (criticalIssues > 0) return 'critical'\r\n    if (highIssues > 0) return 'warning'\r\n    if (health.overallStatus === 'healthy') return 'healthy'\r\n    return 'warning'\r\n  })\r\n\r\n  // Actions - Users\r\n  const loadUsers = async (filters?: Record<string, any>, pagination?: Record<string, any>) => {\r\n    users.value.loading = true\r\n    users.value.error = null\r\n    \r\n    try {\r\n      if (filters) users.value.filters = { ...filters }\r\n      if (pagination) users.value.pagination = { ...users.value.pagination, ...pagination }\r\n      \r\n      const response = await AdminApiService.users.getAll(users.value.filters, users.value.pagination)\r\n      \r\n      if (response.success && response.data) {\r\n        users.value.data = response.data.data\r\n        users.value.totalCount = response.data.total\r\n        users.value.pagination.totalItems = response.data.total\r\n        users.value.pagination.totalPages = Math.ceil(response.data.total / users.value.pagination.pageSize)\r\n      } else {\r\n        throw new Error(response.message || 'Failed to load users')\r\n      }\r\n    } catch (error: any) {\r\n      users.value.error = error.message\r\n      console.error('Error loading users:', error)\r\n    } finally {\r\n      users.value.loading = false\r\n    }\r\n  }\r\n\r\n  const createUser = async (userData: any) => {\r\n    try {\r\n      const response = await AdminApiService.users.create(userData)\r\n      \r\n      if (response.success && response.data) {\r\n        // Refresh users list\r\n        await loadUsers()\r\n        return { success: true, data: response.data }\r\n      } else {\r\n        throw new Error(response.message || 'Failed to create user')\r\n      }\r\n    } catch (error: any) {\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  const updateUser = async (id: string, userData: any) => {\r\n    try {\r\n      const response = await AdminApiService.users.update(id, userData)\r\n      \r\n      if (response.success && response.data) {\r\n        // Update user in current data\r\n        const userIndex = users.value.data.findIndex((user: any) => user.id === id)\r\n        if (userIndex !== -1) {\r\n          users.value.data[userIndex] = { ...users.value.data[userIndex], ...response.data }\r\n        }\r\n        return { success: true, data: response.data }\r\n      } else {\r\n        throw new Error(response.message || 'Failed to update user')\r\n      }\r\n    } catch (error: any) {\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  const deleteUser = async (id: string) => {\r\n    try {\r\n      const response = await AdminApiService.users.delete(id)\r\n      \r\n      if (response.success) {\r\n        // Remove user from current data\r\n        users.value.data = users.value.data.filter((user: any) => user.id !== id)\r\n        users.value.totalCount -= 1\r\n        return { success: true }\r\n      } else {\r\n        throw new Error(response.message || 'Failed to delete user')\r\n      }\r\n    } catch (error: any) {\r\n      return { success: false, error: error.message }\r\n    }\r\n  }\r\n\r\n  const bulkUserOperation = async (operation: string, userIds: string[], params?: Record<string, any>): Promise<BulkOperationResult> => {\r\n    try {\r\n      const response = await AdminApiService.users.bulkOperation(operation, userIds, params)\r\n      \r\n      if (response.success && response.data) {\r\n        // Refresh users list after bulk operation\r\n        await loadUsers()\r\n        return response.data\r\n      } else {\r\n        throw new Error(response.message || 'Bulk operation failed')\r\n      }\r\n    } catch (error: any) {\r\n      return {\r\n        success: 0,\r\n        failed: userIds.length,\r\n        errors: [error.message],\r\n        details: {\r\n          successIds: [],\r\n          failedIds: userIds,\r\n          warnings: []\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Actions - Courses\r\n  const loadCourses = async (departmentId?: string) => {\r\n    courses.value.loading = true\r\n    courses.value.error = null\r\n    \r\n    try {\r\n      const filters = departmentId ? { departmentId } : undefined\r\n      const response = await AdminApiService.academic.getCourses(filters)\r\n      \r\n      if (response.success && response.data) {\r\n        courses.value.data = response.data.data\r\n        courses.value.totalCount = response.data.total\r\n        \r\n        // Group by department\r\n        courses.value.byDepartment = {}\r\n        response.data.data.forEach((course: any) => {\r\n          const dept = course.department || 'Other'\r\n          if (!courses.value.byDepartment[dept]) {\r\n            courses.value.byDepartment[dept] = []\r\n          }\r\n          courses.value.byDepartment[dept].push(course)\r\n        })\r\n      } else {\r\n        throw new Error(response.message || 'Failed to load courses')\r\n      }\r\n    } catch (error: any) {\r\n      courses.value.error = error.message\r\n      console.error('Error loading courses:', error)\r\n    } finally {\r\n      courses.value.loading = false\r\n    }\r\n  }\r\n\r\n  // Actions - Enrollments\r\n  const loadEnrollmentData = async (semesterId?: string) => {\r\n    enrollments.value.loading = true\r\n    enrollments.value.error = null\r\n    \r\n    try {\r\n      const filters = semesterId ? { semesterId } : undefined\r\n      const response = await AdminApiService.academic.getEnrollments(filters)\r\n      \r\n      if (response.success && response.data) {\r\n        enrollments.value.current = response.data.data\r\n        \r\n        // Calculate statistics\r\n        const stats: Record<string, any> = {\r\n          total: response.data.data.length,\r\n          byStatus: {},\r\n          bySemester: {},\r\n          byDepartment: {}\r\n        }\r\n        \r\n        response.data.data.forEach((enrollment: any) => {\r\n          stats.byStatus[enrollment.status] = (stats.byStatus[enrollment.status] || 0) + 1\r\n          stats.bySemester[enrollment.semester] = (stats.bySemester[enrollment.semester] || 0) + 1\r\n          stats.byDepartment[enrollment.department] = (stats.byDepartment[enrollment.department] || 0) + 1\r\n        })\r\n        \r\n        enrollments.value.statistics = stats\r\n      } else {\r\n        throw new Error(response.message || 'Failed to load enrollment data')\r\n      }\r\n    } catch (error: any) {\r\n      enrollments.value.error = error.message\r\n      console.error('Error loading enrollment data:', error)\r\n    } finally {\r\n      enrollments.value.loading = false\r\n    }\r\n  }\r\n\r\n  const bulkEnrollmentOperation = async (operations: any[]): Promise<{ success: number; failed: number }> => {\r\n    try {\r\n      const response = await AdminApiService.academic.bulkEnrollment(operations)\r\n      \r\n      if (response.success && response.data) {\r\n        // Refresh enrollment data\r\n        await loadEnrollmentData()\r\n        return response.data\r\n      } else {\r\n        throw new Error(response.message || 'Bulk enrollment operation failed')\r\n      }\r\n    } catch (error: any) {\r\n      return {\r\n        success: 0,\r\n        failed: operations.length\r\n      }\r\n    }\r\n  }\r\n\r\n  // Actions - System Metrics\r\n  const refreshSystemMetrics = async () => {\r\n    systemMetrics.value.loading = true\r\n    systemMetrics.value.error = null\r\n    \r\n    try {\r\n      const [healthResponse, metricsResponse] = await Promise.all([\r\n        AdminApiService.system.getHealth(),\r\n        AdminApiService.system.getMetrics()\r\n      ])\r\n      \r\n      if (healthResponse.success && healthResponse.data) {\r\n        systemMetrics.value.health = healthResponse.data\r\n      }\r\n      \r\n      if (metricsResponse.success && metricsResponse.data) {\r\n        systemMetrics.value.performance = metricsResponse.data\r\n      }\r\n      \r\n      // Mock alerts for now - in real implementation, these would come from the API\r\n      systemMetrics.value.alerts = [\r\n        {\r\n          id: '1',\r\n          type: 'warning',\r\n          title: 'High Memory Usage',\r\n          message: 'System memory usage is at 85%',\r\n          timestamp: new Date(),\r\n          severity: 'medium',\r\n          category: 'system',\r\n          acknowledged: false\r\n        }\r\n      ]\r\n      \r\n      systemMetrics.value.lastUpdated = new Date()\r\n    } catch (error: any) {\r\n      systemMetrics.value.error = error.message\r\n      console.error('Error refreshing system metrics:', error)\r\n    } finally {\r\n      systemMetrics.value.loading = false\r\n    }\r\n  }\r\n\r\n  // Actions - Departments\r\n  const loadDepartments = async () => {\r\n    departments.value.loading = true\r\n    departments.value.error = null\r\n    \r\n    try {\r\n      const response = await AdminApiService.academic.getDepartments()\r\n      \r\n      if (response.success && response.data) {\r\n        departments.value.data = response.data\r\n      } else {\r\n        throw new Error(response.message || 'Failed to load departments')\r\n      }\r\n    } catch (error: any) {\r\n      departments.value.error = error.message\r\n      console.error('Error loading departments:', error)\r\n    } finally {\r\n      departments.value.loading = false\r\n    }\r\n  }\r\n\r\n  // Actions - Roles\r\n  const loadRoles = async () => {\r\n    roles.value.loading = true\r\n    roles.value.error = null\r\n    \r\n    try {\r\n      const response = await AdminApiService.roles.getAll()\r\n      \r\n      if (response.success && response.data) {\r\n        roles.value.data = response.data\r\n      } else {\r\n        throw new Error(response.message || 'Failed to load roles')\r\n      }\r\n    } catch (error: any) {\r\n      roles.value.error = error.message\r\n      console.error('Error loading roles:', error)\r\n    } finally {\r\n      roles.value.loading = false\r\n    }\r\n  }\r\n\r\n  // Selection management\r\n  const selectUser = (userId: string) => {\r\n    if (!selectedUsers.value.includes(userId)) {\r\n      selectedUsers.value.push(userId)\r\n    }\r\n  }\r\n\r\n  const deselectUser = (userId: string) => {\r\n    selectedUsers.value = selectedUsers.value.filter(id => id !== userId)\r\n  }\r\n\r\n  const selectAllUsers = () => {\r\n    selectedUsers.value = users.value.data.map((user: any) => user.id)\r\n  }\r\n\r\n  const deselectAllUsers = () => {\r\n    selectedUsers.value = []\r\n  }\r\n\r\n  const isUserSelected = (userId: string): boolean => {\r\n    return selectedUsers.value.includes(userId)\r\n  }\r\n\r\n  // Clear methods\r\n  const clearUsersData = () => {\r\n    users.value.data = []\r\n    users.value.totalCount = 0\r\n    users.value.filters = {}\r\n    users.value.pagination = {\r\n      page: 1,\r\n      pageSize: 50,\r\n      totalPages: 0,\r\n      totalItems: 0\r\n    }\r\n    selectedUsers.value = []\r\n  }\r\n\r\n  const clearCoursesData = () => {\r\n    courses.value.data = []\r\n    courses.value.totalCount = 0\r\n    courses.value.byDepartment = {}\r\n  }\r\n\r\n  const clearAllData = () => {\r\n    clearUsersData()\r\n    clearCoursesData()\r\n    enrollments.value = {\r\n      current: [],\r\n      historical: [],\r\n      statistics: {},\r\n      loading: false,\r\n      error: null\r\n    }\r\n    systemMetrics.value = {\r\n      performance: {},\r\n      health: {},\r\n      alerts: [],\r\n      lastUpdated: null,\r\n      loading: false,\r\n      error: null\r\n    }\r\n    selectedEnrollments.value = []\r\n  }\r\n\r\n  return {\r\n    // State\r\n    users: computed(() => users.value),\r\n    courses: computed(() => courses.value),\r\n    enrollments: computed(() => enrollments.value),\r\n    systemMetrics: computed(() => systemMetrics.value),\r\n    departments: computed(() => departments.value),\r\n    roles: computed(() => roles.value),\r\n    selectedUsers: computed(() => selectedUsers.value),\r\n    selectedEnrollments: computed(() => selectedEnrollments.value),\r\n    \r\n    // Getters\r\n    filteredUsers,\r\n    coursesByDepartment,\r\n    enrollmentStatistics,\r\n    systemHealthStatus,\r\n    \r\n    // Actions\r\n    loadUsers,\r\n    createUser,\r\n    updateUser,\r\n    deleteUser,\r\n    bulkUserOperation,\r\n    loadCourses,\r\n    loadEnrollmentData,\r\n    bulkEnrollmentOperation,\r\n    refreshSystemMetrics,\r\n    loadDepartments,\r\n    loadRoles,\r\n    \r\n    // Selection management\r\n    selectUser,\r\n    deselectUser,\r\n    selectAllUsers,\r\n    deselectAllUsers,\r\n    isUserSelected,\r\n    \r\n    // Clear methods\r\n    clearUsersData,\r\n    clearCoursesData,\r\n    clearAllData\r\n  }\r\n})","<template>\r\n  <div class=\"dashboard-layout\">\r\n    <!-- Navigation Bar -->\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-zeus-primary\">\r\n      <div class=\"container-fluid\">\r\n        <span class=\"navbar-brand fw-bold\">Zeus Academia - Admin</span>\r\n        \r\n        <div class=\"navbar-nav ms-auto\">\r\n          <div class=\"nav-item dropdown\">\r\n            <a\r\n              class=\"nav-link dropdown-toggle d-flex align-items-center\"\r\n              href=\"#\"\r\n              role=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n            >\r\n              <div class=\"user-avatar me-2\">\r\n                {{ userInitials }}\r\n              </div>\r\n              {{ authStore.userFullName }}\r\n            </a>\r\n            <ul class=\"dropdown-menu dropdown-menu-end\">\r\n              <li>\r\n                <router-link class=\"dropdown-item\" to=\"/profile\">\r\n                  <i class=\"bi bi-person-circle me-2\"></i>Profile\r\n                </router-link>\r\n              </li>\r\n              <li><hr class=\"dropdown-divider\" /></li>\r\n              <li>\r\n                <a class=\"dropdown-item\" href=\"#\" @click=\"handleLogout\">\r\n                  <i class=\"bi bi-box-arrow-right me-2\"></i>Logout\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <!-- Main Content -->\r\n    <div class=\"container-fluid mt-4\">\r\n      <!-- Welcome Section -->\r\n      <div class=\"row mb-4\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h1 class=\"card-title mb-3\">\r\n                Welcome, {{ authStore.userFullName }}\r\n              </h1>\r\n              <p class=\"card-text text-muted\">\r\n                Role: <span class=\"badge bg-primary\">{{ roleDisplayName }}</span>\r\n                Security Level: <span :class=\"'badge security-level ' + authStore.securityLevel\">{{ authStore.securityLevel.toUpperCase() }}</span>\r\n              </p>\r\n              <p class=\"small text-muted\">\r\n                Last Login: {{ formatDate(new Date()) }}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Role-Based Dashboard Widgets -->\r\n      <div class=\"row\">\r\n        <!-- System Admin Widgets -->\r\n        <template v-if=\"authStore.isSystemAdmin\">\r\n          <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <div class=\"card text-white bg-primary\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h5 class=\"card-title\">Total Users</h5>\r\n                    <h2 class=\"mb-0\">{{ systemMetrics.totalUsers || 0 }}</h2>\r\n                  </div>\r\n                  <div class=\"card-icon\">\r\n                    <i class=\"bi bi-people-fill\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <div class=\"card text-white bg-success\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h5 class=\"card-title\">System Health</h5>\r\n                    <h2 class=\"mb-0\">{{ systemHealthStatus }}</h2>\r\n                  </div>\r\n                  <div class=\"card-icon\">\r\n                    <i class=\"bi bi-heart-pulse-fill\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <div class=\"card text-white bg-warning\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h5 class=\"card-title\">Active Sessions</h5>\r\n                    <h2 class=\"mb-0\">{{ systemMetrics.activeSessions || 0 }}</h2>\r\n                  </div>\r\n                  <div class=\"card-icon\">\r\n                    <i class=\"bi bi-activity\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <div class=\"card text-white bg-danger\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h5 class=\"card-title\">Critical Alerts</h5>\r\n                    <h2 class=\"mb-0\">{{ systemMetrics.criticalAlerts || 0 }}</h2>\r\n                  </div>\r\n                  <div class=\"card-icon\">\r\n                    <i class=\"bi bi-exclamation-triangle-fill\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- Registrar Widgets -->\r\n        <template v-if=\"authStore.isRegistrar\">\r\n          <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <div class=\"card text-white bg-info\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h5 class=\"card-title\">Total Enrollments</h5>\r\n                    <h2 class=\"mb-0\">{{ academicMetrics.totalEnrollments || 0 }}</h2>\r\n                  </div>\r\n                  <div class=\"card-icon\">\r\n                    <i class=\"bi bi-journal-bookmark-fill\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <div class=\"card text-white bg-success\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h5 class=\"card-title\">Active Courses</h5>\r\n                    <h2 class=\"mb-0\">{{ academicMetrics.activeCourses || 0 }}</h2>\r\n                  </div>\r\n                  <div class=\"card-icon\">\r\n                    <i class=\"bi bi-book-fill\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n\r\n        <!-- Academic Admin Widgets -->\r\n        <template v-if=\"authStore.isAcademicAdmin\">\r\n          <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <div class=\"card text-white bg-primary\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h5 class=\"card-title\">Faculty Members</h5>\r\n                    <h2 class=\"mb-0\">{{ academicMetrics.facultyCount || 0 }}</h2>\r\n                  </div>\r\n                  <div class=\"card-icon\">\r\n                    <i class=\"bi bi-mortarboard-fill\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-3 col-md-6 mb-4\">\r\n            <div class=\"card text-white bg-info\">\r\n              <div class=\"card-body\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h5 class=\"card-title\">Departments</h5>\r\n                    <h2 class=\"mb-0\">{{ academicMetrics.departmentCount || 0 }}</h2>\r\n                  </div>\r\n                  <div class=\"card-icon\">\r\n                    <i class=\"bi bi-building\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </div>\r\n\r\n      <!-- Quick Actions -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">Quick Actions</h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div v-if=\"authStore.hasPermission('user_management')\" class=\"col-lg-2 col-md-4 col-sm-6 mb-3\">\r\n                  <router-link to=\"/users\" class=\"btn btn-outline-primary w-100 h-100 d-flex flex-column justify-content-center align-items-center py-3\">\r\n                    <i class=\"bi bi-people fs-1 mb-2\"></i>\r\n                    <span>Manage Users</span>\r\n                  </router-link>\r\n                </div>\r\n                \r\n                <div v-if=\"authStore.hasPermission('system_configuration')\" class=\"col-lg-2 col-md-4 col-sm-6 mb-3\">\r\n                  <router-link to=\"/system\" class=\"btn btn-outline-secondary w-100 h-100 d-flex flex-column justify-content-center align-items-center py-3\">\r\n                    <i class=\"bi bi-gear fs-1 mb-2\"></i>\r\n                    <span>System Config</span>\r\n                  </router-link>\r\n                </div>\r\n                \r\n                <div v-if=\"authStore.hasPermission('academic_calendar')\" class=\"col-lg-2 col-md-4 col-sm-6 mb-3\">\r\n                  <router-link to=\"/academic\" class=\"btn btn-outline-success w-100 h-100 d-flex flex-column justify-content-center align-items-center py-3\">\r\n                    <i class=\"bi bi-calendar-event fs-1 mb-2\"></i>\r\n                    <span>Academic</span>\r\n                  </router-link>\r\n                </div>\r\n                \r\n                <div v-if=\"authStore.hasPermission('financial_management')\" class=\"col-lg-2 col-md-4 col-sm-6 mb-3\">\r\n                  <router-link to=\"/financial\" class=\"btn btn-outline-warning w-100 h-100 d-flex flex-column justify-content-center align-items-center py-3\">\r\n                    <i class=\"bi bi-currency-dollar fs-1 mb-2\"></i>\r\n                    <span>Financial</span>\r\n                  </router-link>\r\n                </div>\r\n                \r\n                <div v-if=\"authStore.hasPermission('system_monitoring')\" class=\"col-lg-2 col-md-4 col-sm-6 mb-3\">\r\n                  <router-link to=\"/monitoring\" class=\"btn btn-outline-info w-100 h-100 d-flex flex-column justify-content-center align-items-center py-3\">\r\n                    <i class=\"bi bi-graph-up fs-1 mb-2\"></i>\r\n                    <span>Monitoring</span>\r\n                  </router-link>\r\n                </div>\r\n                \r\n                <div v-if=\"authStore.hasPermission('audit_access')\" class=\"col-lg-2 col-md-4 col-sm-6 mb-3\">\r\n                  <router-link to=\"/audit\" class=\"btn btn-outline-danger w-100 h-100 d-flex flex-column justify-content-center align-items-center py-3\">\r\n                    <i class=\"bi bi-shield-check fs-1 mb-2\"></i>\r\n                    <span>Audit Logs</span>\r\n                  </router-link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport { useDataStore } from '@/stores/data'\r\n\r\nconst router = useRouter()\r\nconst authStore = useAuthStore()\r\nconst dataStore = useDataStore()\r\n\r\n// Mock metrics - in real implementation, these would come from the data store\r\nconst systemMetrics = ref({\r\n  totalUsers: 1250,\r\n  activeSessions: 42,\r\n  criticalAlerts: 2,\r\n})\r\n\r\nconst academicMetrics = ref({\r\n  totalEnrollments: 3450,\r\n  activeCourses: 120,\r\n  facultyCount: 85,\r\n  departmentCount: 12,\r\n})\r\n\r\nconst userInitials = computed(() => {\r\n  const user = authStore.user\r\n  if (!user) return '?'\r\n  return `${user.firstName.charAt(0)}${user.lastName.charAt(0)}`.toUpperCase()\r\n})\r\n\r\nconst roleDisplayName = computed(() => {\r\n  const roleNames = {\r\n    'system_admin': 'System Administrator',\r\n    'registrar': 'Registrar',\r\n    'academic_admin': 'Academic Administrator'\r\n  }\r\n  return roleNames[authStore.userRole || 'academic_admin'] || 'Administrator'\r\n})\r\n\r\nconst systemHealthStatus = computed(() => {\r\n  const status = dataStore.systemHealthStatus\r\n  const statusMap = {\r\n    'healthy': 'Good',\r\n    'warning': 'Warning',\r\n    'critical': 'Critical',\r\n    'unknown': 'Unknown'\r\n  }\r\n  return statusMap[status] || 'Unknown'\r\n})\r\n\r\nconst formatDate = (date: Date): string => {\r\n  return date.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  })\r\n}\r\n\r\nconst handleLogout = async () => {\r\n  try {\r\n    await authStore.logout()\r\n    await router.push('/login')\r\n  } catch (error) {\r\n    console.error('Logout failed:', error)\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  // Load initial dashboard data\r\n  try {\r\n    if (authStore.hasPermission('system_monitoring')) {\r\n      await dataStore.refreshSystemMetrics()\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load dashboard data:', error)\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dashboard-layout {\r\n  min-height: 100vh;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n.bg-zeus-primary {\r\n  background: var(--zeus-gradient-primary) !important;\r\n}\r\n\r\n.user-avatar {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.card-icon {\r\n  font-size: 2.5rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.card {\r\n  transition: all 0.3s ease;\r\n  border: none;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n  }\r\n}\r\n\r\n.btn-outline-primary,\r\n.btn-outline-secondary,\r\n.btn-outline-success,\r\n.btn-outline-warning,\r\n.btn-outline-info,\r\n.btn-outline-danger {\r\n  min-height: 120px;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\r\n  }\r\n  \r\n  i {\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  &:hover i {\r\n    transform: scale(1.1);\r\n  }\r\n}\r\n\r\n.security-level {\r\n  &.basic {\r\n    background-color: var(--zeus-success) !important;\r\n  }\r\n  \r\n  &.elevated {\r\n    background-color: var(--zeus-warning) !important;\r\n  }\r\n  \r\n  &.critical {\r\n    background-color: var(--zeus-danger) !important;\r\n  }\r\n}\r\n\r\n// Card color variations\r\n.bg-primary { background: linear-gradient(135deg, #007bff 0%, #0056b3 100%) !important; }\r\n.bg-success { background: linear-gradient(135deg, #28a745 0%, #1e7e34 100%) !important; }\r\n.bg-warning { background: linear-gradient(135deg, #ffc107 0%, #d39e00 100%) !important; }\r\n.bg-danger { background: linear-gradient(135deg, #dc3545 0%, #bd2130 100%) !important; }\r\n.bg-info { background: linear-gradient(135deg, #17a2b8 0%, #117a8b 100%) !important; }\r\n\r\n@media (max-width: 768px) {\r\n  .card-body {\r\n    padding: 1rem;\r\n    \r\n    h2 {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n  \r\n  .card-icon {\r\n    font-size: 2rem;\r\n  }\r\n  \r\n  .btn-outline-primary,\r\n  .btn-outline-secondary,\r\n  .btn-outline-success,\r\n  .btn-outline-warning,\r\n  .btn-outline-info,\r\n  .btn-outline-danger {\r\n    min-height: 100px;\r\n    \r\n    i {\r\n      font-size: 2rem !important;\r\n    }\r\n  }\r\n}\r\n</style>"],"names":["useDataStore","defineStore","users","ref","courses","enrollments","systemMetrics","departments","roles","selectedUsers","selectedEnrollments","filteredUsers","computed","user","key","value","userValue","coursesByDepartment","grouped","course","dept","enrollmentStatistics","stats","enrollment","systemHealthStatus","health","criticalIssues","alert","highIssues","loadUsers","filters","pagination","response","AdminApiService","error","createUser","userData","updateUser","id","userIndex","deleteUser","bulkUserOperation","operation","userIds","params","loadCourses","departmentId","loadEnrollmentData","semesterId","bulkEnrollmentOperation","operations","refreshSystemMetrics","healthResponse","metricsResponse","loadDepartments","loadRoles","selectUser","userId","deselectUser","selectAllUsers","deselectAllUsers","isUserSelected","clearUsersData","clearCoursesData","clearAllData","router","useRouter","authStore","useAuthStore","dataStore","academicMetrics","userInitials","roleDisplayName","status","formatDate","date","handleLogout","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_cache","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","_unref","_hoisted_8","_createVNode","_component_router_link","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_normalizeClass","_hoisted_17","_hoisted_18","_Fragment","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69"],"mappings":"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"}